#!/bin/bash

set -e

app=gogs

# Retrieve settings
domain=$(sudo yunohost app setting $app domain)
path=$(sudo yunohost app setting $app path)
data_path=$(sudo yunohost app setting $app datapath)
db_pwd=$(sudo yunohost app setting $app mysqlpwd)
key=$(sudo yunohost app setting $app secret_key)
adminusername=$(sudo yunohost app setting $app adminusername)

if [[ $(cat /etc/debian_version) = "7."* ]]
then
    echo "You need debian Jessie (8.x) to upgrade gogs."
    exit 1
fi

go version | grep 1.5 || {
    # Install golang package from jessie backport if necessary
    sudo echo "deb http://http.debian.net/debian jessie-backports main" | sudo tee /etc/apt/sources.list.d/debian-backport-tmp.list
    sudo apt-get update
    sudo apt-get -t jessie-backports -y install golang
    sudo rm -f /etc/apt/sources.list.d/debian-backport-tmp.list
    sudo apt-get update
}

# Stop service
sudo service gogs stop

# Build Gogs
final_path=/opt/$app
do_install $(yunohost app setting $app version) $final_path
yunohost app setting $app version -v $(cat ../conf/VERSION)

# Configure init script
sudo cp ../conf/systemd/gogs.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable gogs.service

# Configure logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/gogs
sudo service rsyslog restart

# Set gogs user for gogs directory
sudo chown -R gogs:gogs $final_path
sudo chown -hR gogs:gogs $data_path
sudo chown -R gogs:gogs /var/log/gogs
sudo chown -R gogs:gogs /home/gogs

# Copy and edit app.ini
sudo cp ../conf/app.ini $data_path
sudo sed -i "s@yuno_repo@$repo_path@g" $data_path/app.ini
if [ "$path" = "/" ]
then
    sudo sed -i "s@yuno_url@$domain@g" $data_path/app.ini
else
    sudo sed -i "s@yuno_url@$domain${path%/}@g" $data_path/app.ini
fi
sudo sed -i "s/yuno_dbpdw/$db_pwd/g" $data_path/app.ini
sudo sed -i "s/yuno_dbuser/$app/g" $data_path/app.ini
sudo sed -i "s/yuno_domain/$domain/g" $data_path/app.ini
sudo sed -i "s/yuno_key/$key/g" $data_path/app.ini
sudo chown gogs:gogs $data_path/app.ini
# create symlink to place where gogs looks for it
sudo mkdir -p /etc/gogs/conf/
sudo ln -sf $data_path/app.ini /etc/gogs/conf/app.ini

# Restore ldap config
sudo sed -i "s@yuno_admin@$adminusername@g" ../conf/login_source.sql
mysql -u root -p$(sudo cat /etc/yunohost/mysql)  < ../conf/login_source.sql

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@${path%/}@g" ../conf/nginx.conf
if [ "$path" = "/" ]
then
    sed -i "s@COMMENT_IF_ROOT@#@g" ../conf/nginx.conf
else
    sed -i "s@COMMENT_IF_ROOT@@g" ../conf/nginx.conf
fi
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

sudo service gogs start

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app ssowatconf
